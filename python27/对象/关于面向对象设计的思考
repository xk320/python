一、将属于一类的对象放在一起。
    如果一个函数操纵一个全局变量，那么两者最好都放在类内作为特性和方法出现。
二、不要让对象过于亲密。
    方法应该只关心自己的实例的特性，让其他实例管理自己的状态。
三、要小心继承，尤其是多重继承。
    继承机制有时很有用，但也会在某些情况下让事情变得过于复杂。多继承难以正确使用，更难以调试。
四、简单就好。
    让你的方法小巧，一般来说，多数方法都应能在30秒内被读完（以及理解），尽量将代码行数控制在一页或者一屏之内。

当考虑需要什么类以及类有什么方法时，应该尝试下面的方法：
1、写下问题的描述（程序要做什么），把所有名词、动词和形容词加下划线。
2、对于所有名词，用作可能的类。
3、对于所有动词，用作可能的方法。
4、对于所有形容词，用作可能的特性。
5、把所有方法和特性分配到类。

对象
    对象包括特性和方法。特性值作为对象的一部分的变量，方法则是存储在对象内的函数。方法和其他函数的区别在于方法总是将对象作为自己的第一个参数
类
    类代表对象的集合，每个对象都有一个类。类的主要任务是定义它的实例会用到的方法。
多态
    多态是实现将不同类型和类的对象进行同样对待的特性---不需要知道对象属于哪个类就能调用方法。
封装
    对象可以将他们的内部状态隐藏起来。
继承
    一个类可以是一个或者多个类的子类。子类从超类继承所有方法。可以使用多个超类，这个特性可以用来组成功能的正交部分。
    普通的实现方式是使用核心的超类和一个或者多个混合的超类。
接口和内省
    一般来说，对于对象不用探讨过深，程序员可以靠多态调用自己需要的方法。不过如果想要知道对象到底有什么方法和特性，有些函数可以帮助完成这项工作。

