在web应用中，服务器吧网页传给浏览器，实际上就是把网页的HTML代码发送给浏览器，让浏览器显示出来，而浏览器和服务器之间的传输协议是HTT，所以
    HTML是一种用来定义网页的文本，会HTML就可以便可网页
    HTTP是在网络传输HTML的协议，用于浏览器和服务器的通信
在chrome的开发工具中：
Elements显示网页的结构，Network显示浏览器和服务器的通信，在network中确保第一个小红灯亮着，chrome就会记录所有浏览器和服务器之间的通信
当我们在地址栏输入www.sina.com.cn时，浏览器将显示新浪的首页，在这个过程中，浏览器都干了什么事情，通过network的记录，我们就可以知道了
在network中定位的第一条记录，点击右侧将显示request Headers，点击右侧的view source，我们就可以看到浏览器发给新浪服务器的请求：
https://cdn.liaoxuefeng.com/cdn/files/attachments/001399877287994279bc3d41b3040f985e3e8b838211465000

最主要的头两行分析：
GET / HTTP/1.1
GET表示一个读取请求，将从服务器获取网页数据，/表示URL的路径， URL总是以/开头，/表示首页，最后HTTP/1.1指示采用的HTTP协议版本，目前HTTP协
议版本就是1。1，但是大部分服务器也支持1.0版本，主要区别在于1.1版本允许多个HTTP请求复用一个TCP连接，以加快传输速度

第二行  HOS：www.sina.com.cn
www.sina.com.cn 表示请求的域名，如果一台服务器有多个网站，服务器就需要通过HOST来区别浏览器请求的是哪个网站。

Response Headers
HTTP响应分为Header 和 body两部分，Body是可选项
HTTP/1.1 200 OK
200表示一个成功的响应，后面的OK是说明，失败的响应有404 Not Found 网页不存在，500 Internal Server Error:服务器内部出错 等等
Content-Type: text/html
Content-Type指响应的内容，这里是text/html表示HTML网页，请注意，浏览器就是依靠Content-Type来判断响应的内容是网页还是图片，是视频还是音乐
浏览器并不靠URL来判断响应的内容，所以及时URL是http://example.com/abc.jpg,头也不一定是图片。
HTTP响应的Body就是HTML源码，我们在菜单栏选择试图，开发者，查看网页源码就可以在浏览器中直接查看HTML源码。
当浏览器渠道新浪首页的HTML源码后，它会解析HTM，显示页面，然后根据HTML里面的各种连接，在发送HTTP请求给新浪服务器，拿到相应的图片、视频等。
最终显示出一个完整的页面，所以我们在network下面能看到很多额外的HTTP请求。

HTTP请求
跟踪了新浪的首页，我们来总结一下HTTP请求的流程：
1、浏览器首先想服务器发送HTTP请求，请求包括：
    方法：GET还是POS，GET仅请求资源，POST会附带用户数据
    路径：/full/url/path
    域名：有HOST头指定 Host：www.sina.com.cn
    以及其他相关的Header
    如果是POST，那么请求还包括一个Body，包含用户数据。
2、服务器想浏览器返回HTTP响应，响应包括：
    响应代码：200表示成功，3XX表示重定向，4xx表示客户端发送的请求有错误，5xx表示服务器处理是发生了错误
    响应类型：有Content-Type指定：
    通常服务器的HTTP响应会携带内容，也就是有一个Body，包含响应的内容，网页的HTML源码就在Body中。
3、如果浏览器还需要继续想服务器请求其他资源，比如图片，就再次发送HTTP请求，重复1、2步骤

Web采用的HTTP协议用了非常简单的请求-响应模式，从而大大简化了开发。当我们编写一个页面时，我们
只需要在HTTP请求中把HTTP发送出去，不需要考虑如
果附带图片、视频等，浏览器如果需要请求图片和视频，它会发送另一个HTTP请求，因此，一个HTTP请求只处理一个资源。

HTTP协议同时具备极强的扩展性，虽然浏览器请求的是新浪的首页，但是新浪的HTML中可以连接其他服务器的资源，比如<img src="http://i1.sinaimg.cn/08135420.png">
，从而将请求压力分散到哥哥服务器上，并且，一个站点可以连接到其他站点，无数个站点互相连接起来，就形成了World Wide Web 简称WWW

HTTP格式

每个HTTP请求和响应都遵循相同的格式，一个HTTP包含Header和Body两部分，其中Body是可选的。
HTTP协议是一个文本协议，所以，他的格式也非常简单。
    HTTP GET 请求的格式：
        GET /PATH HTTP/1.1
        Header1：Value1
        Header2：Value2
        Header3：Value3
        每个Header一行一个，换行符是\r\n

    HTTP POST请求的格式是
        POST /PATH HTTP1.1
        Header1：Value1
        Header2：Value2
        Header3：Value3

        body data gose here。。。
    当遇到连续两个\r\n时，Header部分结束，后面的数据全部是body

    HTTP响应格式：
        200 OK
        Header1：Value1
        Header2：Value2
        Header3：Value3

        body data gose here。。。

        HTTP响应如果包含body，也是通过两个\r\n 来分隔的。请再次注意，Body的数据类型有Content-Type头来确定，
        如果是网页，Body就是文本，如果是图片，Body就是二进制数据
        当存在Content-Encoding时，Body数据是被压缩的，最常见的压缩方式是gzip。所以看到Content-Encoding：gzip时，需要将Body数据先解
        压，才能得到真正的数据，压缩的目的在于见效Body的大小，加快网络传输。